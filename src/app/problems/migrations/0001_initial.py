# Generated by Django 4.0.6 on 2022-08-08 08:54

from django.db import migrations, models
import django.db.models.deletion
import utils.django.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, verbose_name='lang')),
                ('slug', models.CharField(max_length=32, unique=True, verbose_name='lang slug')),
            ],
            options={
                'verbose_name': 'language',
                'verbose_name_plural': 'languages',
            },
        ),
        migrations.CreateModel(
            name='TopicTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('slug', models.CharField(max_length=255, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'topic tag',
                'verbose_name_plural': 'topic tags',
            },
            managers=[
                ('objects', utils.django.managers.BaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_id', models.CharField(max_length=16, verbose_name='question id')),
                ('question_frontend_id', models.CharField(max_length=16, verbose_name='question frontend id')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('title_slug', models.CharField(max_length=255, unique=True, verbose_name='title slug')),
                ('content', models.TextField(blank=True, null=True, verbose_name='content')),
                ('difficulty', models.CharField(max_length=64, verbose_name='difficulty')),
                ('likes', models.PositiveIntegerField(blank=True, default=0, verbose_name='likes')),
                ('dislikes', models.PositiveIntegerField(blank=True, default=0, verbose_name='dislikes')),
                ('similar_questions', models.JSONField(default=list, verbose_name='similar questions')),
                ('category_title', models.CharField(max_length=255, verbose_name='category title')),
                ('stats', models.JSONField(verbose_name='stats')),
                ('hints', models.JSONField(default=list, verbose_name='hints')),
                ('meta_data', models.JSONField(verbose_name='meta data')),
                ('judge_type', models.CharField(max_length=32, verbose_name='judge type')),
                ('env_info', models.JSONField(verbose_name='env info')),
                ('sample_test_case', models.TextField(blank=True, null=True, verbose_name='sample test case')),
                ('example_testcases', models.TextField(blank=True, null=True, verbose_name='example testcases')),
                ('topic_tags', models.ManyToManyField(blank=True, related_name='questions', to='problems.topictag', verbose_name='topic tags')),
            ],
            options={
                'verbose_name': 'question',
                'verbose_name_plural': 'questions',
            },
            managers=[
                ('objects', utils.django.managers.BaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='CodeSnippet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lang', models.CharField(max_length=32, verbose_name='lang')),
                ('lang_slug', models.CharField(max_length=32, verbose_name='lang slug')),
                ('code', models.TextField(verbose_name='code')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_snippets', to='problems.question', verbose_name='question')),
            ],
            options={
                'verbose_name': 'code snippet',
                'verbose_name_plural': 'code snippets',
            },
            managers=[
                ('objects', utils.django.managers.BaseManager()),
            ],
        ),
    ]
